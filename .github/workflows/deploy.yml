name: check üß™ and merge

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - name: cpy code in git env
        uses: actions/checkout@v4

      - name: setup stable and latest node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: enable corepack for fast install
        run: |
          corepack enable
          corepack prepare yarn@4.9.2 --activate

      - name: generate prisma client
        run: yarn dlx prisma generate --schema=apps/server/prisma/schema.prisma

      - name: install dependencies
        run: yarn install

      - name: build shared packages
        run: yarn build --filter @shared/first...

      - name: check client server and all packages with lint or tsc
        run: yarn check

  automerge:
    needs: check
    if: success() && github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr = context.payload.pull_request;
            if (!pr) {
              core.setFailed("‚ùå No pull request context available.");
              return;
            }

            const mergeResult = await github.rest.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pr.number,
              merge_method: "merge"
            });

            if (!mergeResult.data.merged) {
              core.setFailed("‚ùå Merge failed.");
              return;
            }

            await github.rest.git.deleteRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `heads/${pr.head.ref}`
            });

            console.log(`‚úÖ Merged PR #${pr.number} and deleted branch '${pr.head.ref}'`);

  deploy:
    name: deploy
    needs: automerge
    if: success()
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Deploy to Fly
        run: flyctl deploy --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
