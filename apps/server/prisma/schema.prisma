
/* => start 0-connect.prisma */
datasource db {
    provider = "postgresql"
    url = env("DB_URI")
}


generator client {
  provider = "prisma-client-js"
}
/* => end 0-connect.prisma */

/* => start 1-test.prisma */
model TestA {
  id String @id @default(uuid())
  name String
  count Int

  tests TestB[]  @relation("TestA_TestB")
}

model TestB {
  id String @id @default(uuid())
  name String
  count Int?

  testA_ID String
  testA TestA @relation(fields: [testA_ID], references: [id], name: "TestA_TestB")
}

model TestC {
  id String @id @default(uuid())
  name String
  count Int?

}


/* => end 1-test.prisma */

/* => start 2-cloud-asset.prisma */
enum TypeAsset {
  VIDEO @map("video")
  IMAGE @map("image")
}

enum EntityType {
    COURSE
}

model CloudAsset {
    id String @id @default(uuid())
    url String
    publicID String
    type TypeAsset

    entityID String
    entityType EntityType
    
    createdAt DateTime @default(now())

    @@index([entityID, entityType])
}
/* => end 2-cloud-asset.prisma */

/* => start 3-course.prisma */
enum Grade {
    BEGINNER @map("beginner")
    JUNIOR @map("junior") 
    INTERMEDIATE @map("intermediate")
    EXPERT @map("expert")
}
enum TechStack {
  HTML         @map("html")
  CSS          @map("css")
  JAVASCRIPT   @map("javascript")
  BASH         @map("bash")
  POWERSHELL   @map("powershell")
  PYTHON       @map("python")
  JAVA         @map("java")
  TESTING      @map("testing")
  DEPLOYMENT   @map("deployment")
  MONGODB      @map("mongodb")
  POSTGRESQL   @map("postgresql")
  DESIGN       @map("design")
}

enum Tools {
  PRETTIER     @map("prettier")
  EMMET        @map("emmet")
  MUSTACHE     @map("mustache")
  PUG          @map("pug")
  LIGHTHOUSE   @map("lighthouse")
  AXE          @map("axe")

  SASS         @map("sass")
  LESS         @map("less")
  BOOTSTRAP    @map("bootstrap")
  TAILWIND     @map("tailwind")
  POSTCSS      @map("postcss")

  REACT        @map("react")
  NEXT         @map("next")
  ANGULAR      @map("angular")
  SVELTE       @map("svelte")
  VUE          @map("vue")
  NODE         @map("node")
  EXPRESS      @map("express")
  FASTIFY      @map("fastify")
  NESTJS       @map("nestjs")
  BUN          @map("bun")

  GIT          @map("git")
  GREP         @map("grep")
  CURL         @map("curl")
  AWK          @map("awk")
  JQ           @map("jq")

  CHOCOLATEY   @map("chocolatey")
  WINGET       @map("winget")

  DJANGO       @map("django")
  FASTAPI      @map("fastapi")
  TORCH        @map("torch")
  FLASK        @map("flask")
  NUMPY        @map("numpy")
  PANDAS       @map("pandas")

  SPRING       @map("spring")
  MAVEN        @map("maven")
  GRADLE       @map("gradle")

  JEST         @map("jest")
  VITEST       @map("vitest")
  PLAYWRIGHT   @map("playwright")
  CYPRESS      @map("cypress")
  TESTING_LIBRARY @map("testing_library")

  AWS          @map("aws")
  DOCKER       @map("docker")
  NGINX        @map("nginx")
  VERCEL       @map("vercel")
  NETLIFY      @map("netlify")
  RAILWAY      @map("railway")
  FLYIO        @map("flyio")
  RENDER       @map("render")

  FIGMA        @map("figma")
  SKETCH       @map("sketch")
  ADOBE_XD     @map("adobe_xd")
  CANVA        @map("canva")

  ATLAS        @map("atlas")
  MONGOOSE     @map("mongoose")

  PGADMIN      @map("pgadmin")
  SEQUELIZE    @map("sequelize")
  TYPEORM      @map("typeorm")
  PRISMA       @map("prisma")
}



model Course {
    id String @id @default(uuid())
    title String 
    description String?
    markdown String?
    grade String
    techStack TechStack
    tools Tools
    tags String[]

    createdAt DateTime @default(now())

    @@index([title, techStack])
}
/* => end 3-course.prisma */
